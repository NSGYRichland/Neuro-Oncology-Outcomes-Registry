@model TumorTaskforce_Webapp_1.OtherMedsPivot

@{
    ViewBag.Title = "Add Other Medication";
}

<div class="jumbotron">
    <h1>Add Other Medication</h1>
    <p class="lead"></p>
</div>

@if (User.Identity.IsAuthenticated)
{
    if (ViewBag.displayMenu == "Yes")
    {

        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Other Medication</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @*<div class="form-group">
                        @Html.LabelFor(model => model.patientID, "patientID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("patientID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.patientID, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.datapieceID, "Other Med", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("datapieceID", null, htmlAttributes: new { @class = "form-control" })
                        @if (ViewBag.showLink)
                        {
                            <tag>Don't see it?</tag>@Html.ActionLink("Create a new one", "CreateFromPatient", "PossibleOtherMeds", new { TempPatientID = Int32.Parse(Html.ValueFor(model => model.patientID).ToString()) }, null)
                        }
                        @Html.ValidationMessageFor(model => model.datapieceID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.date, "Date", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.frequency, "Frequency", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.frequency, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.frequency, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.notes, "Notes", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.notes, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.notes, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Add" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to Patient", "Details", "Patients", new { id = Int32.Parse(Html.ValueFor(model => model.patientID).ToString()) }, null)
        </div>

    }
    else
    {
        <h2>  Unauthorized. </h2>
        <h3>
            You need to be an administrator to access this page.
        </h3>
    }
}
else
{
    <h2>  Unauthorized. </h2>
    <h3>
        Please log in or register to access this page.
    </h3>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
