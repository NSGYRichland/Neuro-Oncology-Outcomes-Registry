@model IEnumerable<TumorTaskforce_Webapp_1.Patient>


@{
                /**/

                ViewBag.Title = "Comparison Patients";
}

<div class="jumbotron">
    <h1>Comparison Patients</h1>
    <p class="lead">Patients Created via the Comparison Tool (Not used in Comparison Algorithm)</p>
</div>

@if (User.Identity.IsAuthenticated)
{
    if (ViewBag.displayMenu == "Yes")
    {

        <h2>Comparison Patients created by All Users</h2>
        @Html.ActionLink("Compare New", "Create", new { isCompare = true })
        using (Html.BeginForm("CompIndex", "Patients", FormMethod.Get,
                    new { @class = "Search-form" }))
        {
            <h4>
                Search for patient(s)
            </h4>
            <div class="row">
                <div class="form-inline" style="margin:4px 30px 2px 40px;">
                    <p>
                        ID: <br />@Html.TextBox("q")
                    </p>
                </div>
                <div class="form-inline" style="margin:4px 30px 2px 4px;">
                    <p>
                        Sex: <br />@Html.DropDownList("sex")
                    </p>
                </div>
                <div class="form-inline" style="margin:4px 30px 2px 4px;">
                    <p>
                        Classification: <br />@Html.DropDownList("clss")
                    </p>
                </div>
                <div class="form-inline" style="margin:4px 30px 2px 4px;">
                    <p>
                        Location: <br />@Html.DropDownList("tumLoc")
                    </p>
                </div>
                <div class="form-inline" style="margin:4px 30px 2px 4px;">
                    <p>
                        Grade: <br />@Html.DropDownList("grade")
                    </p>
                </div>
                <div class="form-inline">
                    <br />
                    <div id="buttonSearch">
                        <input type="submit" value="Search" id="buttonSubmit" />
                    </div>
                </div>
            </div>

        }
        <br />
        @*<div id="DivGrid">
                @{
                    var grid = new WebGrid(source: Model, canPage: true, rowsPerPage: 4, defaultSort: "ID");
                    if (Model.Count() > 0)
                    {
                        <div><strong> @ViewBag.SearchParameter</strong> | @grid.TotalRowCount @Html.Label("Patients(s) found")</div>
                        @grid.GetHtml(tableStyle: "PGrid", headerStyle: "Header", alternatingRowStyle: "altRow", htmlAttributes: new { id = "DataTable" }, columns: grid.Columns(
                    grid.Column("ID"),
                    grid.Column("Age", "Age"),
                    grid.Column("Sex", "Sex"),
                    grid.Column("Histological Classification", "Classification")));
                    }
                    else
                    {
                        <hr />@Html.Label("No, Patient(s) not found")<hr />
                    }
                }
            </div>*@


        @*<div id="DivGrid">
                @{
                    var grid = new WebGrid(source: Model, canPage: true, rowsPerPage: 4, defaultSort: "ID");
                    @grid.GetHtml(tableStyle: "PGrid", headerStyle: "Header", alternatingRowStyle: "altRow", htmlAttributes: new { id = "DataTable" }, columns: grid.Columns(
                    grid.Column("Patient"),
                    grid.Column("HistologicalClassification", "Classification"),
                    grid.Column("TumorLocation", "Location"),
                    grid.Column("", header: "ToEdit", format: @<text>@Html.ActionLink("Edit", "Edit", "patientID", new { id = item.ID }, new { target = "_blank" })</text>)));
                }

            </div>*@


        <div class="table-responsive">
            <table class="table table-striped">
                <tr>
                    <th>
                        User
                    </th>
                    <th>
                        Patient
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Sex)
                    </th>
                    @*<th>
                        @Html.DisplayNameFor(model => model.Married)
                    </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.Age)
                    </th>
                    <th>
                        Classification
                    </th>
                    <th>
                        Grade (WHO)
                    </th>
                    <th>
                        Tumor Size
                    </th>
                    <th>
                        Location
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.userName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.patientID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Sex)
                        </td>
                        @*<td>
                            @Html.DisplayFor(modelItem => item.Married)
                        </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.Age)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.HistologicalClassification)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.HistologicalGrade)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TumorWidth)
                            x
                            @Html.DisplayFor(modelItem => item.TumorHeight)
                            x
                            @Html.DisplayFor(modelItem => item.TumorLength)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TumorLocation)
                        </td>
                        <td>
                            @*@Html.ActionLink("Edit", "Edit", new { id=item.patientID }) |*@
                            @Html.ActionLink("View", "Details", new { id = item.patientID }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.patientID })

                        </td>
                    </tr>
                }

            </table>
        </div>

    }
    else
    {
        <h2>  Unauthorized. </h2>
        <h3>
            You need to be an administrator to access this page.
        </h3>
    }
}
else
{
    <h2>  Unauthorized. </h2>
    <h3>
        Please log in or register to access this page.
    </h3>
}

