@model TumorTaskforce_Webapp_1.Patient
@using Microsoft.AspNet.Identity;

@if (ViewBag.isCompare == false)
{
    {
        ViewBag.Title = "Details";
    }

    <div class="jumbotron">
        <h1>Patient Details</h1>
        <p class="lead"></p>
    </div>

    if (User.Identity.IsAuthenticated)
    {
        if (ViewBag.displayMenu == "Yes")
        {
            <div>
                <h4>Patient @Html.DisplayFor(model => model.patientID)</h4>
                <hr />
                <div class="row">
                    <div class="col-md-4">
                        <b>Patient Info</b>
                        @Html.ActionLink("(Edit)", "Edit", new { id = Model.patientID })
                        <hr />
                        <dl class="dl-horizontal">
                            <dt>
                                @Html.DisplayNameFor(model => model.Sex)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Sex)
                            </dd>

                            <dt>
                                @Html.DisplayNameFor(model => model.Age)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Age)
                            </dd>

                            <dt>
                                Race
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Integumentary)
                            </dd>

                            <dt>
                                Deceased
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Married)
                            </dd>

                            <dt>
                                BMI
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Diet)
                            </dd>

                            <dt>
                                ASA
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Exercize)
                            </dd>

                            <dt>
                                CCI
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Gastrointestinal)
                            </dd>

                            <dt>
                                KPS
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Constitutional)
                            </dd>
                        </dl>
                    </div>
                    <div class="col-md-4">
                        <b>Tumor Info</b>
                        @Html.ActionLink("(Edit)", "Edit", new { id = Model.patientID })
                        <hr />
                        <dl class="dl-horizontal">
                            <dt>
                                Classification
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.HistologicalClassification)
                            </dd>

                            <dt>
                                Grade (WHO)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.HistologicalGrade)
                            </dd>

                            <dt>
                                Tumor Size (WxHxL)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.TumorWidth)
                                x
                                @Html.DisplayFor(model => model.TumorHeight)
                                x
                                @Html.DisplayFor(model => model.TumorLength)
                            </dd>

                            <dt>
                                Location
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.TumorLocation)
                            </dd>
                        </dl>
                    </div>
                    <div class="col-md-4">
                        <b>Review of Systems</b>
                        @Html.ActionLink("(Edit)", "Edit", new { id = Model.patientID })
                        <hr />
                        <dl class="dl-horizontal">

                            <dt>
                                @Html.DisplayNameFor(model => model.Respiratory)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Respiratory)
                            </dd>

                            <dt>
                                @Html.DisplayNameFor(model => model.Cardiovascular)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Cardiovascular)
                            </dd>

                            <dt>
                                @Html.DisplayNameFor(model => model.Musculoskeletal)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Musculoskeletal)
                            </dd>

                            <dt>
                                @Html.DisplayNameFor(model => model.Neurologic)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Neurologic)
                            </dd>
                        </dl>
                    </div>
                </div>
                <hr />
                <dl class="dl-horizontal">
                    <dt>
                        Symptoms
                    </dt>
                    <dd>
                        <br />
                        @foreach (SymptomsPivot sp in Model.SymptomsPivots)
                        {
                            @Html.DisplayFor(spitem => sp.PossibleSymptom.Name)

                            if (sp.date != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.date)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.date)
                            }
                            if (sp.frequency != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.frequency)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.frequency)
                            }
                            if (sp.notes != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.notes)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.notes)
                            }
                            <tag> --- </tag>
                            @Html.ActionLink("Edit", "Edit", "SymptomsPivots", new { id = sp.Id }, null)
                            <tag> | </tag>
                            @Html.ActionLink("Remove", "Delete", "SymptomsPivots", new { id = sp.Id }, null)
                            <br />
                        }
                        @Html.ActionLink("Add Symptom", "Create", "SymptomsPivots", new { patientId = Model.patientID }, null)
                        <br />
                    </dd>

                    <dt>
                        <br />
                        Other Medications
                    </dt>

                    <dd>
                        <br />
                        @foreach (OtherMedsPivot sp in Model.OtherMedsPivots)
                        {
                            @Html.DisplayFor(spitem => sp.PossibleOtherMed.Name)

                            if (sp.date != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.date)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.date)
                            }
                            if (sp.frequency != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.frequency)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.frequency)
                            }
                            if (sp.notes != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.notes)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.notes)
                            }
                            <tag> --- </tag>
                            @Html.ActionLink("Edit", "Edit", "OtherMedsPivots", new { id = sp.Id }, null)
                            <tag> | </tag>
                            @Html.ActionLink("Remove", "Delete", "OtherMedsPivots", new { id = sp.Id }, null)
                            <br />
                        }
                        @Html.ActionLink("Add Other Medication", "Create", "OtherMedsPivots", new { patientId = Model.patientID }, null)
                        <br />
                    </dd>

                    <dt>
                        <br />
                        Health Factors
                    </dt>

                    <dd>
                        <br />
                        @foreach (HealthFactorsPivot sp in Model.HealthFactorsPivots)
                        {
                            @Html.DisplayFor(spitem => sp.PossibleHealthFactor.Name)
                            if (sp.date != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.date)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.date)
                            }
                            if (sp.frequency != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.frequency)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.frequency)
                            }
                            if (sp.notes != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.notes)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.notes)
                            }
                            <tag> --- </tag>
                            @Html.ActionLink("Edit", "Edit", "HealthFactorsPivots", new { id = sp.Id }, null)
                            <tag> | </tag>
                            @Html.ActionLink("Remove", "Delete", "HealthFactorsPivots", new { id = sp.Id }, null)
                            <br />
                        }
                        @Html.ActionLink("Add Health Factor", "Create", "HealthFactorsPivots", new { patientId = Model.patientID }, null)
                        <br />
                    </dd>

                    <dt>
                        <br />
                        Treatments Given
                    </dt>

                    <dd>
                        <br />
                        @foreach (TreatmentsPivot sp in Model.TreatmentsPivots)
                        {
                            @Html.DisplayFor(spitem => sp.PossibleTreatment.Name)
                            if (sp.date != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.date)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.date)
                            }
                            if (sp.frequency != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.frequency)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.frequency)
                            }
                            if (sp.notes != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.notes)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.notes)
                            }
                            if (sp.effectiveness != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.effectiveness)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.effectiveness)
                            }
                            <tag> --- </tag>
                            @Html.ActionLink("Edit", "Edit", "TreatmentsPivots", new { id = sp.Id }, null)
                            <tag> | </tag>
                            @Html.ActionLink("Remove", "Delete", "TreatmentsPivots", new { id = sp.Id }, null)
                            <br />
                        }
                        @Html.ActionLink("Add Treatment", "Create", "TreatmentsPivots", new { patientId = Model.patientID }, null)
                        <br />
                    </dd>
                </dl>
            </div>
            <hr />
            <p>
                @Html.ActionLink("Delete Patient", "Delete", new { id = Model.patientID }) |
                @Html.ActionLink("Back to Patient Directory", "Index")
            </p>


        }
        else
        {
            <h2>  Unauthorized. </h2>
            <h3>
                You need to be an administrator to access this page.
            </h3>
        }
    }
    else
    {
        <h2>  Unauthorized. </h2>
        <h3>
            Please log in or register to access this page.
        </h3>
    }
}
else
{
    {
        ViewBag.Title = "Compare";
    }

    <div class="jumbotron">
        <h1>Patient Information</h1>
        <p class="lead"></p>
    </div>

    if (User.Identity.IsAuthenticated)
    {
        if (ViewBag.displayMenu=="Yes" || Model.userName == User.Identity.GetUserName())
        {

            <div>
                <h4>Review the data below. Hit 'Compare Now' to get compare this patient to our database</h4>
                <br />
                <h6>
                    Suggested Treatment from previous run: 
                </h6>
                <p>
                    @Html.DisplayFor(model => model.comparisonResults)
                </p>
                <br />
                <hr />
                <div class="row">
                    <div class="col-md-4">
                        <b>Patient Info</b>
                        @Html.ActionLink("(Edit)", "Edit", new { id = Model.patientID })
                        <hr />
                        <dl class="dl-horizontal">
                            <dt>
                                @Html.DisplayNameFor(model => model.Sex)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Sex)
                            </dd>

                            <dt>
                                @Html.DisplayNameFor(model => model.Age)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Age)
                            </dd>

                            <dt>
                                Race
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Integumentary)
                            </dd>

                            <dt>
                                Deceased
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Married)
                            </dd>

                            <dt>
                                BMI
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Diet)
                            </dd>

                            <dt>
                                ASA
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Exercize)
                            </dd>

                            <dt>
                                CCI
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Gastrointestinal)
                            </dd>

                            <dt>
                                KPS
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Constitutional)
                            </dd>
                        </dl>
                    </div>
                    <div class="col-md-4">
                        <b>Tumor Info</b>
                        @Html.ActionLink("(Edit)", "Edit", new { id = Model.patientID })
                        <hr />
                        <dl class="dl-horizontal">
                            <dt>
                                Classification
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.HistologicalClassification)
                            </dd>

                            <dt>
                                Grade (WHO)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.HistologicalGrade)
                            </dd>

                            <dt>
                                Tumor Size (WxHxL)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.TumorWidth)
                                x
                                @Html.DisplayFor(model => model.TumorHeight)
                                x
                                @Html.DisplayFor(model => model.TumorLength)
                            </dd>

                            <dt>
                                Location
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.TumorLocation)
                            </dd>
                        </dl>
                    </div>
                    <div class="col-md-4">
                        <b>Review of Systems</b>
                        @Html.ActionLink("(Edit)", "Edit", new { id = Model.patientID })
                        <hr />
                        <dl class="dl-horizontal">

                            <dt>
                                @Html.DisplayNameFor(model => model.Respiratory)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Respiratory)
                            </dd>

                            <dt>
                                @Html.DisplayNameFor(model => model.Cardiovascular)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Cardiovascular)
                            </dd>

                            <dt>
                                @Html.DisplayNameFor(model => model.Musculoskeletal)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Musculoskeletal)
                            </dd>
                            
                            <dt>
                                @Html.DisplayNameFor(model => model.Neurologic)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Neurologic)
                            </dd>
                        </dl>
                    </div>
                </div>
                <hr />
                <dl class="dl-horizontal">
                    <dt>
                        Symptoms
                    </dt>
                    <dd>
                        <br />
                        @foreach (SymptomsPivot sp in Model.SymptomsPivots)
                        {
                            @Html.DisplayFor(spitem => sp.PossibleSymptom.Name)

                            if (sp.date != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.date)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.date)
                            }
                            if (sp.frequency != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.frequency)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.frequency)
                            }
                            if (sp.notes != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.notes)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.notes)
                            }
                            <tag> --- </tag>
                            @Html.ActionLink("Edit", "Edit", "SymptomsPivots", new { id = sp.Id }, null)
                            <tag> | </tag>
                            @Html.ActionLink("Remove", "Delete", "SymptomsPivots", new { id = sp.Id }, null)
                            <br />
                        }
                        @Html.ActionLink("Add Symptom", "Create", "SymptomsPivots", new { patientId = Model.patientID }, null)
                        <br />
                    </dd>

                    <dt>
                        <br />
                        Other Medications
                    </dt>

                    <dd>
                        <br />
                        @foreach (OtherMedsPivot sp in Model.OtherMedsPivots)
                        {
                            @Html.DisplayFor(spitem => sp.PossibleOtherMed.Name)

                            if (sp.date != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.date)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.date)
                            }
                            if (sp.frequency != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.frequency)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.frequency)
                            }
                            if (sp.notes != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.notes)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.notes)
                            }
                            <tag> --- </tag>
                            @Html.ActionLink("Edit", "Edit", "OtherMedsPivots", new { id = sp.Id }, null)
                            <tag> | </tag>
                            @Html.ActionLink("Remove", "Delete", "OtherMedsPivots", new { id = sp.Id }, null)
                            <br />
                        }
                        @Html.ActionLink("Add Other Medication", "Create", "OtherMedsPivots", new { patientId = Model.patientID }, null)
                        <br />
                    </dd>

                    <dt>
                        <br />
                        Health Factors
                    </dt>

                    <dd>
                        <br />
                        @foreach (HealthFactorsPivot sp in Model.HealthFactorsPivots)
                        {
                            @Html.DisplayFor(spitem => sp.PossibleHealthFactor.Name)
                            if (sp.date != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.date)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.date)
                            }
                            if (sp.frequency != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.frequency)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.frequency)
                            }
                            if (sp.notes != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.notes)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.notes)
                            }
                            <tag> --- </tag>
                            @Html.ActionLink("Edit", "Edit", "HealthFactorsPivots", new { id = sp.Id }, null)
                            <tag> | </tag>
                            @Html.ActionLink("Remove", "Delete", "HealthFactorsPivots", new { id = sp.Id }, null)
                            <br />
                        }
                        @Html.ActionLink("Add Health Factor", "Create", "HealthFactorsPivots", new { patientId = Model.patientID }, null)
                        <br />
                    </dd>

                    <dt>
                        <br />
                        Treatments Given
                    </dt>

                    <dd>
                        <br />
                        @foreach (TreatmentsPivot sp in Model.TreatmentsPivots)
                        {
                            @Html.DisplayFor(spitem => sp.PossibleTreatment.Name)
                            if (sp.date != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.date)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.date)
                            }
                            if (sp.frequency != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.frequency)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.frequency)
                            }
                            if (sp.notes != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.notes)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.notes)
                            }
                            if (sp.effectiveness != null)
                            {
                                <tag> // </tag>
                                @Html.DisplayNameFor(spitem => sp.effectiveness)
                                <tag>: </tag>
                                @Html.DisplayFor(spitem => sp.effectiveness)
                            }
                            <tag> --- </tag>
                            @Html.ActionLink("Edit", "Edit", "TreatmentsPivots", new { id = sp.Id }, null)
                            <tag> | </tag>
                            @Html.ActionLink("Remove", "Delete", "TreatmentsPivots", new { id = sp.Id }, null)
                            <br />
                        }
                        @Html.ActionLink("Add Treatment", "Create", "TreatmentsPivots", new { patientId = Model.patientID }, null)
                        <br />
                    </dd>
                </dl>
            </div>
            <hr />
            <p>
                @using (Html.BeginForm("Results","Patients", new { id = Model.patientID }))
                {
                    @Html.AntiForgeryToken()

                <div class="form-actions no-color">
                    <input type="submit" value="Compare Now" class="btn btn-default" /> |
                    @Html.ActionLink("Delete", "Delete", new { id = Model.patientID })
                </div>
                }
                
                @*@Html.ActionLink("Compare Now", "Results", new { id = Model.patientID })*@
            </p>


        }
        else
        {
            <h2> Unauthorized. </h2>
            <h3>
            You need to be an administrator to access this page.
            </h3>
        }
    }
    else
    {
        <h2>  Unauthorized. </h2>
        <h3>
            Please log in or register to access this page.
        </h3>
    }
}


