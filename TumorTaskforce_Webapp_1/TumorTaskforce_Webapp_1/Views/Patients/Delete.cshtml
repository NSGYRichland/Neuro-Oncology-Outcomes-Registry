@model TumorTaskforce_Webapp_1.Patient

@{
    ViewBag.Title = "Delete";
}

<div class="jumbotron">
    <h1>Delete Patient</h1>
    <p class="lead"></p>
</div>

@if (User.Identity.IsAuthenticated)
{
    if (ViewBag.displayMenu == "Yes")
    {

        <h3>Are you sure you want to delete this?</h3>
        <div>
            <h4>Patient @Html.DisplayFor(model => model.patientID)</h4>
            <hr />
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Sex)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Sex)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Married)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Married)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Age)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Age)
                </dd>

                <dt>
                    Classification
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.HistologicalClassification)
                </dd>

                <dt>
                    Grade (WHO)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.HistologicalGrade)
                </dd>

                <dt>
                    Tumor Size (WxHxL)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.TumorWidth)
                    x
                    @Html.DisplayFor(model => model.TumorHeight)
                    x
                    @Html.DisplayFor(model => model.TumorLength)
                </dd>

                @*<dt>
                        @Html.DisplayNameFor(model => model.TumorHeight)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.TumorHeight)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.TumorLength)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.TumorLength)
                    </dd>*@

                <dt>
                    Location
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.TumorLocation)
                </dd>

                <dt>
                    <br />Review of Systems<br />
                    @Html.DisplayNameFor(model => model.Constitutional)
                </dt>

                <dd>
                    <br /><br />
                    @Html.DisplayFor(model => model.Constitutional)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Respiratory)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Respiratory)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Cardiovascular)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Cardiovascular)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Gastrointestinal)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Gastrointestinal)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Musculoskeletal)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Musculoskeletal)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Integumentary)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Integumentary)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Neurologic)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Neurologic)
                </dd>

                <dt>
                    Exercise
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Exercize)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Diet)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Diet)
                </dd>

                <dt>
                    <br />
                    Symptoms
                </dt>

                <dd>
                    <br />
                    @foreach (SymptomsPivot sp in Model.SymptomsPivots)
                    {
                        @Html.DisplayFor(spitem => sp.PossibleSymptom.Name)

                        if (sp.date != null)
                        {
                            <tag> - </tag>
                            @Html.DisplayNameFor(spitem => sp.date)
                            <tag>: </tag>
                            @Html.DisplayFor(spitem => sp.date)
                        }
                        if (sp.frequency != null)
                        {
                            <tag> - </tag>
                            @Html.DisplayNameFor(spitem => sp.frequency)
                            <tag>: </tag>
                            @Html.DisplayFor(spitem => sp.frequency)
                        }
                        if (sp.notes != null)
                        {
                            <tag> - </tag>
                            @Html.DisplayNameFor(spitem => sp.notes)
                            <tag>: </tag>
                            @Html.DisplayFor(spitem => sp.notes)
                        }

                        <br />
                    }
                </dd>

                <dt>
                    <br />
                    Other Medications
                </dt>

                <dd>
                    <br />
                    @foreach (OtherMedsPivot sp in Model.OtherMedsPivots)
                    {
                        if (sp.date != null)
                        {
                            <tag> - </tag>
                            @Html.DisplayNameFor(spitem => sp.date)
                            <tag>: </tag>
                            @Html.DisplayFor(spitem => sp.date)
                        }
                        if (sp.frequency != null)
                        {
                            <tag> - </tag>
                            @Html.DisplayNameFor(spitem => sp.frequency)
                            <tag>: </tag>
                            @Html.DisplayFor(spitem => sp.frequency)
                        }
                        if (sp.notes != null)
                        {
                            <tag> - </tag>
                            @Html.DisplayNameFor(spitem => sp.notes)
                            <tag>: </tag>
                            @Html.DisplayFor(spitem => sp.notes)
                        }
                        <br />
                    }
                </dd>

                <dt>
                    <br />
                    Health Factors
                </dt>

                <dd>
                    <br />
                    @foreach (HealthFactorsPivot sp in Model.HealthFactorsPivots)
                    {
                        @Html.DisplayFor(spitem => sp.PossibleHealthFactor.Name)
                        if (sp.date != null)
                        {
                            <tag> - </tag>
                            @Html.DisplayNameFor(spitem => sp.date)
                            <tag>: </tag>
                            @Html.DisplayFor(spitem => sp.date)
                        }
                        if (sp.frequency != null)
                        {
                            <tag> - </tag>
                            @Html.DisplayNameFor(spitem => sp.frequency)
                            <tag>: </tag>
                            @Html.DisplayFor(spitem => sp.frequency)
                        }
                        if (sp.notes != null)
                        {
                            <tag> - </tag>
                            @Html.DisplayNameFor(spitem => sp.notes)
                            <tag>: </tag>
                            @Html.DisplayFor(spitem => sp.notes)
                        }
                        <br />
                    }
                </dd>

                <dt>
                    <br />
                    Treatments Given
                </dt>

                <dd>
                    <br />
                    @foreach (TreatmentsPivot sp in Model.TreatmentsPivots)
                    {
                        @Html.DisplayFor(spitem => sp.PossibleTreatment.Name)
                        if (sp.date != null)
                        {
                            <tag> - </tag>
                            @Html.DisplayNameFor(spitem => sp.date)
                            <tag>: </tag>
                            @Html.DisplayFor(spitem => sp.date)
                        }
                        if (sp.frequency != null)
                        {
                            <tag> - </tag>
                            @Html.DisplayNameFor(spitem => sp.frequency)
                            <tag>: </tag>
                            @Html.DisplayFor(spitem => sp.frequency)
                        }
                        if (sp.notes != null)
                        {
                            <tag> - </tag>
                            @Html.DisplayNameFor(spitem => sp.notes)
                            <tag>: </tag>
                            @Html.DisplayFor(spitem => sp.notes)
                        }
                        if (sp.effectiveness != null)
                        {
                            <tag> - </tag>
                            @Html.DisplayNameFor(spitem => sp.effectiveness)
                            <tag>: </tag>
                            @Html.DisplayFor(spitem => sp.effectiveness)
                        }

                        <br />
                    }
                </dd>

            </dl>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-actions no-color">
                    <input type="submit" value="Delete" class="btn btn-default" /> |
                    @Html.ActionLink("Back to List", "Index")
                </div>
            }
        </div>


    }
    else
    {
        <h2>  Unauthorized. </h2>
        <h3>
            You need to be an administrator to access this page.
        </h3>
    }
}
else
{
    <h2>  Unauthorized. </h2>
    <h3>
        Please log in or register to access this page.
    </h3>
}

