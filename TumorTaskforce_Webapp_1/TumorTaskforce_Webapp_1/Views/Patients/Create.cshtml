@model TumorTaskforce_Webapp_1.Patient
@using Microsoft.AspNet.Identity

@if (ViewBag.isCompare == false)
{
    {
        ViewBag.Title = "Create";
    }

    <div class="jumbotron">
        <h1>Create New Patient</h1>
        <p class="lead">Enter Patient Details Below</p>
    </div>

    if (User.Identity.IsAuthenticated)
    {
        if (ViewBag.displayMenu == "Yes")
        {

            using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>New Patient</h4>
                    <hr />
                    @Html.Hidden("isCompare", false)
                    @Html.Hidden("comparisonResults")
                    @Html.Hidden("userName", User.Identity.GetUserName())
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="row">
                        <div class="col-md-4" id="MobilePage1">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Sex, "Sex", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.DropDownList("Sex", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Integumentary, "Race", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.DropDownList("Integumentary", null, htmlAttributes: new { @class = "form-control" })

                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Married, "Deceased", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.Married)
                                        @Html.ValidationMessageFor(model => model.Married, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Diet, "BMI", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.DropDownList("Diet", null, htmlAttributes: new { @class = "form-control" })

                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Exercize, "ASA", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.DropDownList("Exercize", null, htmlAttributes: new { @class = "form-control" })

                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Gastrointestinal, "CCI", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.DropDownList("Gastrointestinal", null, htmlAttributes: new { @class = "form-control" })

                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Constitutional, "KPS", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.DropDownList("Constitutional", null, htmlAttributes: new { @class = "form-control" })

                                </div>
                            </div>
                        </div>
                        <div class="col-md-4" id="MobilePage2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.HistologicalClassification, "Classification", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.DropDownList("HistologicalClassification", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.HistologicalClassification, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.HistologicalGrade, "Grade (WHO)", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.DropDownList("HistologicalGrade", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.HistologicalGrade, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TumorWidth, "Tumor Width (mm)", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.TumorWidth, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.TumorWidth, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TumorHeight, "Tumor Height (mm)", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.TumorHeight, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.TumorHeight, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TumorLength, "Tumor Length (mm)", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.TumorLength, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.TumorLength, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TumorLocation, "Tumor Location", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.DropDownList("TumorLocation", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.TumorLocation, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4" id="MobilePage3">
                            <div>
                                <h6>
                                    Review of Systems - 'Ctrl' to multi-select
                                </h6>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Respiratory, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Respiratory, new { htmlAttributes = new { @class = "hiddenRespiratory", @style = "display:none" } })
                                    @Html.ListBox("Respiratory", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Respiratory, "", new { @class = "text-danger" })
                                    <div class="row">
                                        <div class="col-1">
                                            Other:
                                        </div><div class="col-1"></div>
                                        <div>
                                            <input type="text" id="RespiratoryOther" style="width:150px" />
                                        </div>
                                        <div>
                                            <input type="button" style="float:left" id="RespiratoryOtherAdd" value="Add" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="form-group">
                                @Html.LabelFor(model => model.Cardiovascular, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Cardiovascular, new { htmlAttributes = new { @class = "hiddenCardiovascular", @style = "display:none" } })
                                    @Html.ListBox("Cardiovascular", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Cardiovascular, "", new { @class = "text-danger" })
                                    <div class="row">
                                        <div class="col-1">
                                            Other:
                                        </div><div class="col-1"></div>
                                        <div>
                                            <input type="text" id="CardiovascularOther" style="width:150px" />
                                        </div>
                                        <div>
                                            <input type="button" style="float:left" id="CardiovascularOtherAdd" value="Add" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="form-group">
                                @Html.LabelFor(model => model.Musculoskeletal, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Musculoskeletal, new { htmlAttributes = new { @class = "hiddenMusculoskeletal", @style = "display:none" } })
                                    @Html.ListBox("Musculoskeletal", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Musculoskeletal, "", new { @class = "text-danger" })
                                    <div class="row">
                                        <div class="col-1">
                                            Other:
                                        </div><div class="col-1"></div>
                                        <div>
                                            <input type="text" id="MusculoskeletalOther" style="width:150px" />
                                        </div>
                                        <div>
                                            <input type="button" style="float:left" id="MusculoskeletalOtherAdd" value="Add" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="form-group">
                                @Html.LabelFor(model => model.Neurologic, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Neurologic, new { htmlAttributes = new { @class = "hiddenNeurologic", @style = "display:none" } })
                                    @Html.ListBox("Neurologic", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Neurologic, "", new { @class = "text-danger" })
                                    <div class="row">
                                        <div class="col-1">
                                            Other:
                                        </div><div class="col-1"></div>
                                        <div>
                                            <input type="text" id="NeurologicOther" style="width:150px" />
                                        </div>
                                        <div>
                                            <input type="button" style="float:left" id="NeurologicOtherAdd" value="Add" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group" id="MobileButton">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="button" value="Back" class="btn btn-default" id="MobileBackButton" />
                            <input type="button" value="Next" class="btn btn-default" id="MobileNextButton" />
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>

        }
        else
        {
            <h2>  Unauthorized. </h2>
            <h3>
                You need to be an administrator to access this page.
            </h3>
        }
    }
    else
    {
        <h2>  Unauthorized. </h2>
        <h3>
            Please log in or register to access this page.
        </h3>
    }
}
else
{
    {
        ViewBag.Title = "Compare";
    }

    <div class="jumbotron">
        <h1>Compare New Patient</h1>
        <p class="lead">Enter Patient Details Below</p>
    </div>

    if (User.Identity.IsAuthenticated)
    {
        //if (ViewBag.displayMenu == "Yes")
        {

            using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>New Patient</h4>
                    <hr />
                    @Html.Hidden("isCompare", true)
                    @Html.Hidden("comparisonResults", "Comparison tool not yet run for this patient")
                    @Html.Hidden("userName", User.Identity.GetUserName())
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="row">
                        <div class="col-md-4" id="MobilePage1">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Sex, "Sex", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.DropDownList("Sex", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Integumentary, "Race", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.DropDownList("Integumentary", null, htmlAttributes: new { @class = "form-control" } )

                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Married, "Deceased", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.Married)
                                        @Html.ValidationMessageFor(model => model.Married, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Diet, "BMI", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.DropDownList("Diet", null, htmlAttributes: new { @class = "form-control" } )

                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Exercize, "ASA", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.DropDownList("Exercize", null, htmlAttributes: new { @class = "form-control" })

                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Gastrointestinal, "CCI", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.DropDownList("Gastrointestinal", null, htmlAttributes: new { @class = "form-control" })

                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Constitutional, "KPS", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.DropDownList("Constitutional", null, htmlAttributes: new { @class = "form-control" })

                                </div>
                            </div>
                        </div>
                        <div class="col-md-4" id="MobilePage2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.HistologicalClassification, "Classification", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.DropDownList("HistologicalClassification", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.HistologicalClassification, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.HistologicalGrade, "Grade (WHO)", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.DropDownList("HistologicalGrade", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.HistologicalGrade, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TumorWidth, "Tumor Width (mm)", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.TumorWidth, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.TumorWidth, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TumorHeight, "Tumor Height (mm)", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.TumorHeight, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.TumorHeight, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TumorLength, "Tumor Length (mm)", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.TumorLength, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.TumorLength, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TumorLocation, "Tumor Location", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.DropDownList("TumorLocation", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.TumorLocation, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4" id="MobilePage3">
                            <div>
                                <h6>
                                    Review of Systems - 'Ctrl' to multi-select
                                </h6>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Respiratory, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Respiratory, new { htmlAttributes = new { @class = "hiddenRespiratory", @style = "display:none" } })
                                    @Html.ListBox("Respiratory", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Respiratory, "", new { @class = "text-danger" })
                                    <div class="row">
                                        <div class="col-1">
                                            Other:
                                        </div><div class="col-1"></div>
                                        <div>
                                            <input type="text" id="RespiratoryOther" style="width:150px" />
                                        </div>
                                        <div>
                                            <input type="button" style="float:left" id="RespiratoryOtherAdd" value="Add" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="form-group">
                                @Html.LabelFor(model => model.Cardiovascular, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Cardiovascular, new { htmlAttributes = new { @class = "hiddenCardiovascular", @style = "display:none" } })
                                    @Html.ListBox("Cardiovascular", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Cardiovascular, "", new { @class = "text-danger" })
                                    <div class="row">
                                        <div class="col-1">
                                            Other:
                                        </div><div class="col-1"></div>
                                        <div>
                                            <input type="text" id="CardiovascularOther" style="width:150px" />
                                        </div>
                                        <div>
                                            <input type="button" style="float:left" id="CardiovascularOtherAdd" value="Add" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="form-group">
                                @Html.LabelFor(model => model.Musculoskeletal, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Musculoskeletal, new { htmlAttributes = new { @class = "hiddenMusculoskeletal", @style = "display:none" } })
                                    @Html.ListBox("Musculoskeletal", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Musculoskeletal, "", new { @class = "text-danger" })
                                    <div class="row">
                                        <div class="col-1">
                                            Other:
                                        </div><div class="col-1"></div>
                                        <div>
                                            <input type="text" id="MusculoskeletalOther" style="width:150px" />
                                        </div>
                                        <div>
                                            <input type="button" style="float:left" id="MusculoskeletalOtherAdd" value="Add" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="form-group">
                                @Html.LabelFor(model => model.Neurologic, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Neurologic, new { htmlAttributes = new { @class = "hiddenNeurologic", @style = "display:none" } })
                                    @Html.ListBox("Neurologic", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Neurologic, "", new { @class = "text-danger" })
                                    <div class="row">
                                        <div class="col-1">
                                            Other:
                                        </div><div class="col-1"></div>
                                        <div>
                                            <input type="text" id="NeurologicOther" style="width:150px" />
                                        </div>
                                        <div>
                                            <input type="button" style="float:left" id="NeurologicOtherAdd" value="Add" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group" id="MobileButton">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="button" value="Back" class="btn btn-default" id="MobileBackButton"/>
                            <input type="button" value="Next" class="btn btn-default" id="MobileNextButton"/>
                        </div>
                    </div>

                    <div class="form-group" id="SubmitButton">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Next" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }

            <div>
                @Html.ActionLink("Cancel", "Index","Home")
            </div>

        }
        //else
        //{
        //    <h2>  Unauthorized. </h2>
        //    <h3>
        //        You need to be an administrator to access this page.
        //    </h3>
        //}
    }
    else
    {
        <h2>  Unauthorized. </h2>
        <h3>
            Please log in or register to access this page.
        </h3>
    }
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script>
    var MobilePage = 1;
    $(document).ready(function () {
        $("#MobileButton").hide();
        $("#MobilePage3Title").hide();
        if ($(window).width() < 750) {
            $("#MobilePage3Title").show();
            $("#MobilePage2").hide();
            $("#MobilePage3").hide();
            $("#SubmitButton").hide();
            $("#MobileButton").show();
            $("#MobileBackButton").hide();
        }
    });
    $("#MobileNextButton").click(function () {
        $("#MobilePage" + MobilePage).hide();
        $("#MobileBackButton").show();
        MobilePage++;
        $("#MobilePage" + MobilePage).show();
        if (MobilePage == 3) {
            $(this).hide();
            $("#SubmitButton").show();
        }
        window.scrollTo(0, 0);
    });
    $("#MobileBackButton").click(function () {
        $("#MobilePage" + MobilePage).hide();
        $("#MobileNextButton").show();
        MobilePage--;
        $("#MobilePage" + MobilePage).show();
        if (MobilePage == 1) {
            $(this).hide();
        }
        $("#SubmitButton").hide();
        window.scrollTo(0, 0);
    });
    
    $("#TumorLocation").change(function() {
        console.log($(this).val());
        if ($(this).val() == "Other") {
            $(this).parent().append('<input type="text" class="LocationsOther" placeholder="Please Specify">');
            $(".LocationsOther").keyup(function () {
                $(".tempLocation").hide();
                $("#TumorLocation").append('<option value="' + $(this).val() + '" class="tempLocation">' + $(this).val() + '</option>');
                //console.log($(this).val());
                $("#TumorLocation").val($(this).val());
                //console.log($("#Locations").first().val());
            });
        }
        else {
            $(".LocationsOther").hide();
        }
    });
    $("#HistologicalClassification").change(function () {
        console.log($(this).val());
        if ($(this).val() == "Other") {
            $(this).parent().append('<input type="text" class="ClassificationsOther" placeholder="Please Specify">');
            $(".ClassificationsOther").keyup(function () {
                $(".tempClassification").hide();
                $("#HistologicalClassification").append('<option value="' + $(this).val() + '" class="tempClassification">' + $(this).val() + '</option>');
                //console.log($(this).val());
                $("#HistologicalClassification").val($(this).val());
                //console.log($("#Locations").first().val());
            });
        }
        else {
            $(".ClassificationsOther").hide();
        }
    });
    $("#DietOtherAdd").click(function () {
        var entry = $("#DietOther").val();
        if (!(entry == "")) {
            diet = $("select[id='Diet']");
            diet.append('<option value="' + entry + '">' + entry + '</option>');
            $("#DietOther").val("");
            var values = diet.val().toString() + "," + entry;
            diet.val(values.split(','));
            console.log(diet.val());
            $(".hiddenDiet").val($(".hiddenDiet").val().toString() + "," + entry);
            console.log($(".hiddenDiet").val());
        }
    });
    $("select[id='Diet']").change(function () {
        $(".hiddenDiet").val($(this).val().toString());
        console.log($(".hiddenDiet").val());
    });
    $("#ConstitutionalOtherAdd").click(function () {
        var entry = $("#ConstitutionalOther").val();
        if (!(entry == "")) {
            Constitutional = $("select[id='Constitutional']");
            Constitutional.append('<option value="' + entry + '">' + entry + '</option>');
            $("#ConstitutionalOther").val("");
            var values = Constitutional.val().toString() + "," + entry;
            Constitutional.val(values.split(','));
            console.log(Constitutional.val());
            $(".hiddenConstitutional").val($(".hiddenConstitutional").val().toString() + "," + entry);
            console.log($(".hiddenConstitutional").val());
        }
    });
    $("select[id='Constitutional']").change(function () {
        $(".hiddenConstitutional").val($(this).val().toString());
        console.log($(".hiddenConstitutional").val());
    });
    $("#RespiratoryOtherAdd").click(function () {
        var entry = $("#RespiratoryOther").val();
        if (!(entry == "")) {
            Respiratory = $("select[id='Respiratory']");
            Respiratory.append('<option value="' + entry + '">' + entry + '</option>');
            $("#RespiratoryOther").val("");
            var values = Respiratory.val().toString() + "," + entry;
            Respiratory.val(values.split(','));
            console.log(Respiratory.val());
            $(".hiddenRespiratory").val($(".hiddenRespiratory").val().toString() + "," + entry);
            console.log($(".hiddenRespiratory").val());
        }
    });
    $("select[id='Respiratory']").change(function () {
        $(".hiddenRespiratory").val($(this).val().toString());
        console.log($(".hiddenRespiratory").val());
    });
    $("#CardiovascularOtherAdd").click(function () {
        var entry = $("#CardiovascularOther").val();
        if (!(entry == "")) {
            Cardiovascular = $("select[id='Cardiovascular']");
            Cardiovascular.append('<option value="' + entry + '">' + entry + '</option>');
            $("#CardiovascularOther").val("");
            var values = Cardiovascular.val().toString() + "," + entry;
            Cardiovascular.val(values.split(','));
            console.log(Cardiovascular.val());
            $(".hiddenCardiovascular").val($(".hiddenCardiovascular").val().toString() + "," + entry);
            console.log($(".hiddenCardiovascular").val());
        }
    });
    $("select[id='Cardiovascular']").change(function () {
        $(".hiddenCardiovascular").val($(this).val().toString());
        console.log($(".hiddenCardiovascular").val());
    });
    $("#MusculoskeletalOtherAdd").click(function () {
        var entry = $("#MusculoskeletalOther").val();
        if (!(entry == "")) {
            Musculoskeletal = $("select[id='Musculoskeletal']");
            Musculoskeletal.append('<option value="' + entry + '">' + entry + '</option>');
            $("#MusculoskeletalOther").val("");
            var values = Musculoskeletal.val().toString() + "," + entry;
            Musculoskeletal.val(values.split(','));
            console.log(Musculoskeletal.val());
            $(".hiddenMusculoskeletal").val($(".hiddenMusculoskeletal").val().toString() + "," + entry);
            console.log($(".hiddenMusculoskeletal").val());
        }
    });
    $("select[id='Musculoskeletal']").change(function () {
        $(".hiddenMusculoskeletal").val($(this).val().toString());
        console.log($(".hiddenMusculoskeletal").val());
    });
    $("#IntegumentaryOtherAdd").click(function () {
        var entry = $("#IntegumentaryOther").val();
        if (!(entry == "")) {
            Integumentary = $("select[id='Integumentary']");
            Integumentary.append('<option value="' + entry + '">' + entry + '</option>');
            $("#IntegumentaryOther").val("");
            var values = Integumentary.val().toString() + "," + entry;
            Integumentary.val(values.split(','));
            console.log(Integumentary.val());
            $(".hiddenIntegumentary").val($(".hiddenIntegumentary").val().toString() + "," + entry);
            console.log($(".hiddenIntegumentary").val());
        }
    });
    $("select[id='Integumentary']").change(function () {
        $(".hiddenIntegumentary").val($(this).val().toString());
        console.log($(".hiddenIntegumentary").val());
    });
    $("#NeurologicOtherAdd").click(function () {
        var entry = $("#NeurologicOther").val();
        if (!(entry == "")) {
            Neurologic = $("select[id='Neurologic']");
            Neurologic.append('<option value="' + entry + '">' + entry + '</option>');
            $("#NeurologicOther").val("");
            var values = Neurologic.val().toString() + "," + entry;
            Neurologic.val(values.split(','));
            console.log(Neurologic.val());
            $(".hiddenNeurologic").val($(".hiddenNeurologic").val().toString() + "," + entry);
            console.log($(".hiddenNeurologic").val());
        }
    });
    $("select[id='Neurologic']").change(function () {
        $(".hiddenNeurologic").val($(this).val().toString());
        console.log($(".hiddenNeurologic").val());
    });
    $("#ExercizeOtherAdd").click(function () {
        var entry = $("#ExercizeOther").val();
        if (!(entry == "")) {
            Exercize = $("select[id='Exercize']");
            Exercize.append('<option value="' + entry + '">' + entry + '</option>');
            $("#ExercizeOther").val("");
            var values = Exercize.val().toString() + "," + entry;
            Exercize.val(values.split(','));
            console.log(Exercize.val());
            $(".hiddenExercize").val($(".hiddenExercize").val().toString() + "," + entry);
            console.log($(".hiddenExercize").val());
        }
    });
    $("select[id='Exercize']").change(function () {
        $(".hiddenExercize").val($(this).val().toString());
        console.log($(".hiddenExercize").val());
    });
    $("#GastrointestinalOtherAdd").click(function () {
        var entry = $("#GastrointestinalOther").val();
        if (!(entry == "")) {
            Gastrointestinal = $("select[id='Gastrointestinal']");
            Gastrointestinal.append('<option value="' + entry + '">' + entry + '</option>');
            $("#GastrointestinalOther").val("");
            var values = Gastrointestinal.val().toString() + "," + entry;
            Gastrointestinal.val(values.split(','));
            console.log(Gastrointestinal.val());
            $(".hiddenGastrointestinal").val($(".hiddenGastrointestinal").val().toString() + "," + entry);
            console.log($(".hiddenGastrointestinal").val());
        }
    });
    $("select[id='Gastrointestinal']").change(function () {
        $(".hiddenGastrointestinal").val($(this).val().toString());
        console.log($(".hiddenGastrointestinal").val());
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
